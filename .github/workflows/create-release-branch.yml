name: Create Release Branch

on:
  repository_dispatch:
    types: create_release_branch
  schedule:
  - cron: '0 13 * * 1'
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Select the release type (default is minor)'
        required: true
        default: 'minor'
        type: choice
        options:
          - minor
          - major
          - patch
          - beta

jobs:
  
  create_branch:
    name: 'Create Branch'
    runs-on: ubuntu-latest

    steps:
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.13.x'
        cache: 'npm'
        cache-dependency-path: ./package-lock.json
    - name: Checkout
      uses: actions/checkout@v2.0.0
      with:
        ref: ${{ github.event.ref }}
    - uses: ./.github/actions/gitConfig
      with:
          email: ${{ secrets.GH_EMAIL }}
    - run: npm install shelljs
    - name: Create and Push the Release Branch
      run: |
        echo "Creating a ${RELEASE_TYPE} release from branch ${{ github.event.ref }}"
        node scripts/create-release-branch.js
      env: 
        RELEASE_TYPE: ${{ github.event.inputs.releaseType || 'minor' }}
        BASE_BRANCH: ${{ github.event.ref || 'develop'}}
# For future Slack Integration
#     - name: Update Slack - Failure
#       if: failure()
#       run: |
#         curl -H 'Content-Type: application/json' \
#         -H 'Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}' \
#         -X POST -d "${{ github.event.client_payload.on_failure }}" \
#         https://slack.com/api/chat.update
#     - name: Update Slack - Success
#       if: success()
#       run: |
#         curl -H 'Content-Type: application/json' \
#         -H 'Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}' \
#         -X POST -d "${{ github.event.client_payload.on_success }}" \
#         https://slack.com/api/chat.update
